{"version":3,"sources":["app_component/weather.component.jsx","app_component/form.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["minmaxTemp","min","max","className","Weather","props","city","timezone","temp_celsius","temp_min","temp_max","weatherIcon","description","humidity","wind","Form","error","role","onSubmit","loadweather","type","name","autoComplete","placeholder","API_Key","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","lat","coord","lon","api_call_time","response1","console","log","setState","sys","celsius","calCelsius","main","temp","weather","speed","get_WeatherIcon","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeId","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAqBA,SAASA,EAAWC,EAAKC,GACrB,GAAID,GAAOC,EACP,OACI,+BACI,uBAAMC,UAAU,OAAhB,UAAwBF,EAAxB,UACA,uBAAME,UAAU,OAAhB,UAAwBD,EAAxB,aAMDE,MA9BC,SAACC,GACb,OACI,qBAAKF,UAAU,uBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,6BAAKE,EAAMC,OACVD,EAAME,SAAY,oBAAIJ,UAAU,OAAd,SAAsBE,EAAME,WAAkB,KAChEF,EAAMG,aAAgB,qBAAIL,UAAU,OAAd,UAAsBE,EAAMG,aAA5B,UAAuD,KAC7ER,EAAWK,EAAMI,SAAUJ,EAAMK,UAClC,oBAAIP,UAAU,OAAd,SACI,mBAAGA,UAAS,aAAQE,EAAMM,YAAd,kBAEhB,oBAAIR,UAAU,OAAd,SAAsBE,EAAMO,cAC3BP,EAAMQ,SAAY,qBAAIV,UAAU,OAAd,sBAA+BE,EAAMQ,SAArC,OAAwD,KAC1ER,EAAMS,KAAQ,qBAAIX,UAAU,OAAd,yBAAkCE,EAAMS,KAAxC,QAAwD,W,MCiBxEC,MA7BF,SAAAV,GACT,OACI,sBAAKF,UAAU,YAAf,UACI,8BAAME,EAAMW,MAoBhB,qBAAKb,UAAU,0BAA0Bc,KAAK,QAA9C,2CApBkC,OAC9B,sBAAMC,SAAUb,EAAMc,YAAtB,SACI,sBAAKhB,UAAU,MAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,uBAAOiB,KAAK,OAAOjB,UAAU,eAAekB,KAAK,OAAOC,aAAa,MAAMC,YAAY,WAE3F,qBAAKpB,UAAU,WAAf,SACI,uBAAOiB,KAAK,OAAOjB,UAAU,eAAekB,KAAK,UAAUC,aAAa,MAAMC,YAAY,cAE9F,qBAAKpB,UAAU,qCAAf,SACI,wBAAQA,UAAU,kBAAlB,oCCTlBqB,EAAO,mCAEPC,E,kDACF,aAAe,IAAD,8BACV,gBA2DJC,WA5Dc,uCA4DD,WAAOC,GAAP,6BAAAC,EAAA,yDAETD,EAAEE,iBAEIvB,EAAOqB,EAAEG,OAAOC,SAASzB,KAAK0B,MAC9BC,EAAUN,EAAEG,OAAOC,SAASE,QAAQD,OAEtC1B,IAAQ2B,EAPH,iCAQkBC,MAAM,qDAAD,OAAsD5B,EAAtD,YAA8D2B,EAA9D,kBAA+ET,IARtG,cAQCW,EARD,gBASkBA,EAASC,OAT3B,cASCC,EATD,OAUCC,EAAMD,EAASE,MAAMD,IACrBE,EAAMH,EAASE,MAAMC,IAXtB,UAYuBN,MAAM,uDAAD,OAAwDI,EAAxD,gBAAmEE,EAAnE,uCAAqGhB,IAZjI,eAYCiB,EAZD,iBAamBA,EAAcL,OAbjC,QAaCM,EAbD,OAcLC,QAAQC,IAAIP,GACZM,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVvC,KAAK,GAAD,OAAK+B,EAAShB,KAAd,YAAsBgB,EAASS,IAAIb,SACvCc,QAAS,EAAKC,WAAWX,EAASY,KAAKC,MACvCxC,SAAU,EAAKsC,WAAWX,EAASY,KAAKvC,UACxCD,SAAU,EAAKuC,WAAWX,EAASY,KAAKxC,UACxCG,YAAayB,EAASc,QAAQ,GAAGvC,YACjCC,SAAUwB,EAASY,KAAKpC,SACxBC,KAAMuB,EAASvB,KAAKsC,MACpBpC,OAAO,EACPT,SAAUmC,EAAUnC,WAGxB,EAAK8C,gBAAgB,EAAK1C,YAAa0B,EAASc,QAAQ,GAAGG,IA5BtD,4CA5DC,sDAEV,EAAKC,MAAQ,CACTjD,UAAMkD,EACNvB,aAASuB,EACTC,UAAMD,EACNP,UAAMO,EACNT,aAASS,EACT9C,cAAU8C,EACV/C,cAAU+C,EACV5C,YAAa,GACbI,OAAO,EACPH,cAAU2C,EACV1C,UAAM0C,EACNjD,cAAUiD,GAEd,EAAK7C,YAAc,CACf+C,aAAc,kBACdC,QAAS,WACTC,KAAM,mBACNC,KAAM,UACNC,WAAY,SACZC,MAAO,eACPC,OAAQ,cAvBF,E,8CA2Bd,SAAWd,GAEP,OADWe,KAAKC,MAAMhB,EAAO,U,6BAIjC,SAAgBiB,EAAOC,GACnB,QAAQ,GACJ,KAAKA,GAAW,KAAOA,GAAW,IAC9BC,KAAKxB,SAAS,CAACY,KAAMY,KAAK1D,YAAY+C,eACtC,MACJ,KAAKU,GAAW,KAAOA,GAAW,IAC9BC,KAAKxB,SAAS,CAACY,KAAMY,KAAK1D,YAAYgD,UACtC,MACJ,KAAKS,GAAW,KAAOA,GAAW,IAC9BC,KAAKxB,SAAS,CAACY,KAAMY,KAAK1D,YAAYiD,OACtC,MACJ,KAAKQ,GAAW,KAAOA,GAAW,IAC9BC,KAAKxB,SAAS,CAACY,KAAMY,KAAK1D,YAAYkD,OACtC,MACJ,KAAKO,GAAW,KAAOA,GAAW,IAC9BC,KAAKxB,SAAS,CAACY,KAAMY,KAAK1D,YAAYmD,aACtC,MACJ,KAAiB,MAAZM,EACDC,KAAKxB,SAAS,CAACY,KAAMY,KAAK1D,YAAYoD,QACtC,MAIJ,QACIM,KAAKxB,SAAS,CAACY,KAAMY,KAAK1D,YAAYqD,Y,oBAoClD,WACI,OACI,sBAAK7D,UAAU,MAAf,UACI,cAAC,EAAD,CAAMgB,YAAakD,KAAK3C,WAAYV,MAAOqD,KAAKd,MAAMvC,QACtD,cAAC,EAAD,CACIV,KAAM+D,KAAKd,MAAMjD,KACjB2B,QAASoC,KAAKd,MAAMtB,QACpBzB,aAAc6D,KAAKd,MAAMR,QACzBtC,SAAU4D,KAAKd,MAAM9C,SACrBC,SAAU2D,KAAKd,MAAM7C,SACrBE,YAAayD,KAAKd,MAAM3C,YACxBD,YAAa0D,KAAKd,MAAME,KACxB5C,SAAUwD,KAAKd,MAAM1C,SACrBC,KAAMuD,KAAKd,MAAMzC,KACjBP,SAAU8D,KAAKd,MAAMhD,kB,GA3GvB+D,IAAMC,WAkHT9C,IC/GA+C,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACxDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.cfe451de.chunk.js","sourcesContent":["import React from 'react';\n\nconst Weather = (props) => {\n    return (\n        <div className=\"container text-light\">\n            <div className=\"cards pt-4\">\n                <h1>{props.city}</h1>\n                {props.timezone ? (<h4 className=\"py-2\">{props.timezone}</h4>) : null}\n                {props.temp_celsius ? (<h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>) : null}\n                {minmaxTemp(props.temp_min, props.temp_max)}\n                <h5 className=\"py-4\">\n                    <i className={`wi ${props.weatherIcon} display-1`}/>\n                </h5>\n                <h4 className=\"py-2\">{props.description}</h4>\n                {props.humidity ? (<h4 className=\"py-2\">Humidity:{props.humidity}%</h4>) : null}\n                {props.wind ? (<h4 className=\"py-2\">Wind Speed: {props.wind}Kt</h4>) : null}\n                </div>\n        </div>\n    );\n};\n\nfunction minmaxTemp(min, max) {\n    if (min && max) {\n        return (\n            <h3>\n                <span className=\"px-5\">{min}&deg;</span>\n                <span className=\"px-5\">{max}&deg;</span>\n            </h3>\n        );\n    }\n    ;\n};\nexport default Weather;","import React from 'react';\nimport './form.style.css'\n\nconst Form = props => {\n    return (\n        <div className=\"container\">\n            <div>{props.error ? error() : null}</div>\n            <form onSubmit={props.loadweather}>\n                <div className=\"row\">\n                    <div className=\"col-md-3 offset-md-2\">\n                        <input type=\"text\" className=\"form-control\" name=\"city\" autoComplete=\"off\" placeholder=\"city\"/>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <input type=\"text\" className=\"form-control\" name=\"country\" autoComplete=\"off\" placeholder=\"country\"/>\n                    </div>\n                    <div className=\"col-md-3 mt-md-0 py-2 text-md-left\">\n                        <button className=\"btn btn-warning\">Get Weather</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nfunction error() {\n    return (\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\n            Please Enter City and Country\n        </div>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './app_component/weather.component';\nimport Form from './app_component/form.component';\n\nconst API_Key = `2c02b27a7c6ad36875ac6291cdb636ef`;\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            city: undefined,\n            country: undefined,\n            icon: undefined,\n            main: undefined,\n            celsius: undefined,\n            temp_max: undefined,\n            temp_min: undefined,\n            description: \"\",\n            error: false,\n            humidity: undefined,\n            wind: undefined,\n            timezone: undefined,\n        };\n        this.weatherIcon = {\n            Thunderstorm: \"wi-thunderstorm\",\n            Drizzle: \"wi-sleet\",\n            Rain: \"wi-storm-showers\",\n            Snow: \"wi-snow\",\n            Atmosphere: \"wi-fog\",\n            Clear: \"wi-day-sunny\",\n            Clouds: \"wi-day-fog\",\n        };\n    };\n\n    calCelsius(temp) {\n        let cell = Math.floor(temp - 273.15);\n        return cell;\n    }\n\n    get_WeatherIcon(icons, rangeId) {\n        switch (true) {\n            case rangeId >= 200 && rangeId <= 232:\n                this.setState({icon: this.weatherIcon.Thunderstorm});\n                break;\n            case rangeId >= 300 && rangeId <= 321:\n                this.setState({icon: this.weatherIcon.Drizzle});\n                break;\n            case rangeId >= 500 && rangeId <= 531:\n                this.setState({icon: this.weatherIcon.Rain});\n                break;\n            case rangeId >= 600 && rangeId <= 622:\n                this.setState({icon: this.weatherIcon.Snow});\n                break;\n            case rangeId >= 701 && rangeId <= 781:\n                this.setState({icon: this.weatherIcon.Atmosphere});\n                break;\n            case rangeId === 800:\n                this.setState({icon: this.weatherIcon.Clear});\n                break;\n            case rangeId >= 801 && rangeId <= 804:\n                this.setState({icon: this.weatherIcon.Clouds});\n                break;\n            default:\n                this.setState({icon: this.weatherIcon.Clouds});\n        }\n    }\n\n    getWeather = async (e) => {\n\n        e.preventDefault();\n\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n\n        if (city && country) {\n            const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_Key}`);\n            const response = await api_call.json();\n            const lat = response.coord.lat;\n            const lon = response.coord.lon;\n            const api_call_time = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,daily&appid=${API_Key}`);\n            const response1 = await api_call_time.json();\n            console.log(response);\n            console.log(response1);\n            this.setState({\n                city: `${response.name},${response.sys.country}`,\n                celsius: this.calCelsius(response.main.temp),\n                temp_max: this.calCelsius(response.main.temp_max),\n                temp_min: this.calCelsius(response.main.temp_min),\n                description: response.weather[0].description,\n                humidity: response.main.humidity,\n                wind: response.wind.speed,\n                error: false,\n                timezone: response1.timezone,\n            })\n\n            this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Form loadweather={this.getWeather} error={this.state.error}/>\n                <Weather\n                    city={this.state.city}\n                    country={this.state.country}\n                    temp_celsius={this.state.celsius}\n                    temp_min={this.state.temp_min}\n                    temp_max={this.state.temp_max}\n                    description={this.state.description}\n                    weatherIcon={this.state.icon}\n                    humidity={this.state.humidity}\n                    wind={this.state.wind}\n                    timezone={this.state.timezone}\n                />\n            </div>\n        );\n    };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}